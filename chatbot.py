import tkinter as tk
from tkinter import ttk, scrolledtext

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—ñ–≤ —ñ —Å—Ç–∏–ª—é ---
BG_COLOR = "#fefefe"
BOT_COLOR = "#e9f5ff"
USER_COLOR = "#dfffdc"
FONT = ("Segoe UI", 12)

# --- –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π ---
def get_bot_response(user_input, state):
    user_input = user_input.strip().lower()
    response = ""
    next_state = state

    if state == "start":
        if user_input == "—Ç–∞–∫":
            response = "–ü–∞—Ü—ñ—î–Ω—Ç –º–∞—î —Ç—ñ–ª—å–∫–∏ –ê–ù–ù, —á–∏ –∫—Ä–æ–ø–∏–≤‚Äô—è–Ω–∫—É/–ê–ù–ù? (–≤–≤–µ–¥—ñ—Ç—å: –∫—Ä–æ–ø–∏–≤‚Äô—è–Ω–∫–∞ –∞–±–æ –ê–ù–ù)"
            next_state = "path_choice"
        else:
            response = "‚û°Ô∏è –°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª—é—á–∏—Ç–∏ –ø—Ä–æ–≤–æ–∫—É—é—á—ñ —Ñ–∞–∫—Ç–æ—Ä–∏."
            next_state = "end"

    elif state == "path_choice":
        if "–∫—Ä–æ–ø" in user_input:
            response = "–ß–∏ —Ç—Ä–∏–≤–∞—é—Ç—å —Å–∏–º–ø—Ç–æ–º–∏ –ø–æ–Ω–∞–¥ 6 —Ç–∏–∂–Ω—ñ–≤? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "urticaria_duration"
        elif "–∞–Ω–Ω" in user_input:
            response = "–ß–∏ –ø—Ä–∏–π–º–∞—î –ø–∞—Ü—ñ—î–Ω—Ç —ñ–Ω–≥—ñ–±—ñ—Ç–æ—Ä–∏ –ê–ü–§? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "ann_apf"
        else:
            response = "‚ö†Ô∏è –í–≤–µ–¥—ñ—Ç—å '–∫—Ä–æ–ø–∏–≤‚Äô—è–Ω–∫–∞' –∞–±–æ '–ê–ù–ù'"

    elif state == "urticaria_duration":
        if user_input == "—Ç–∞–∫":
            response = "–ß–∏ —î —Å—É–ø—É—Ç–Ω—è –∞—É—Ç–æ—ñ–º—É–Ω–Ω–∞ –ø–∞—Ç–æ–ª–æ–≥—ñ—è? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "urticaria_autoimmune"
        else:
            response = "‚û°Ô∏è –ô–º–æ–≤—ñ—Ä–Ω–∞ –≥–æ—Å—Ç—Ä–∞ –∫—Ä–æ–ø–∏–≤‚Äô—è–Ω–∫–∞."
            next_state = "end"

    elif state == "urticaria_autoimmune":
        response = "–ß–∏ —î –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π BHRA –∞–±–æ BAT —Ç–µ—Å—Ç? (—Ç–∞–∫/–Ω—ñ)"
        next_state = "bhra"

    elif state == "bhra":
        if user_input == "—Ç–∞–∫":
            response = "–ß–∏ –Ω–∞—è–≤–Ω—ñ ‚â•1 –º–∞—Ä–∫–µ—Ä (ASST+, IgG-anti-FcŒµRI/IgE+, ‚ÜìIgE, ‚ÜëIgG-anti-TPO, ‚ÜìIgA, –±–∞–∑–æ–ø–µ–Ω—ñ—è, –µ–æ–∑–∏–Ω–æ–ø–µ–Ω—ñ—è)? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "markers"
        else:
            response = "‚û°Ô∏è Type IIb aiCSU –º–∞–ª–æ–π–º–æ–≤—ñ—Ä–Ω–∏–π. –ö—Ä–∞—â–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∞–Ω—Ç–∏–≥—ñ—Å—Ç–∞–º—ñ–Ω–Ω—ñ —Ç–∞ –æ–º–∞–ª—ñ–∑—É–º–∞–±."
            next_state = "end"

    elif state == "markers":
        if user_input == "—Ç–∞–∫":
            response = "‚û°Ô∏è Type IIb aiCSU –π–º–æ–≤—ñ—Ä–Ω–∏–π. –ü–æ–≥–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∞–Ω—Ç–∏–≥—ñ—Å—Ç–∞–º—ñ–Ω–Ω—ñ —Ç–∞ –æ–º–∞–ª—ñ–∑—É–º–∞–±, –¥–æ–±—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ü–∏–∫–ª–æ—Å–ø–æ—Ä–∏–Ω."
        else:
            response = "‚û°Ô∏è Type IIb aiCSU –º–æ–∂–ª–∏–≤–∏–π. –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —á–µ—Ä–µ–∑ 6‚Äì12 –º—ñ—Å—è—Ü—ñ–≤."
        next_state = "end"

    elif state == "ann_apf":
        if user_input == "—Ç–∞–∫":
            response = "‚û°Ô∏è –ú–æ–∂–ª–∏–≤–∞ –∞—Å–æ—Ü—ñ–∞—Ü—ñ—è –∑ —ñ–Ω–≥—ñ–±—ñ—Ç–æ—Ä–æ–º –ê–ü–§."
            next_state = "end"
        else:
            response = "–ß–∏ –∑–Ω–∏–∂–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å C4? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "c4"

    elif state == "c4":
        if user_input == "—Ç–∞–∫":
            response = "–ß–∏ –∑–Ω–∏–∂–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å C1-—ñ–Ω–≥—ñ–±—ñ—Ç–æ—Ä–∞? (—Ç–∞–∫/–Ω—ñ)"
            next_state = "c1"
        else:
            response = "‚û°Ô∏è –ú–æ–∂–ª–∏–≤–∞ —ñ–¥—ñ–æ–ø–∞—Ç–∏—á–Ω–∞ –∞–Ω–≥—ñ–æ–µ–¥–µ–º–∞."
            next_state = "end"

    elif state == "c1":
        if user_input == "—Ç–∞–∫":
            response = "‚û°Ô∏è –ú–æ–∂–ª–∏–≤–∞ —Å–ø–∞–¥–∫–æ–≤–∞ –∞–Ω–≥—ñ–æ–µ–¥–µ–º–∞."
        else:
            response = "‚û°Ô∏è –ú–æ–∂–ª–∏–≤–∞ –Ω–∞–±—É—Ç–∞ –∞–Ω–≥—ñ–æ–µ–¥–µ–º–∞ (C1-—ñ–Ω–≥—ñ–±—ñ—Ç–æ—Ä)."
        next_state = "end"

    return response, next_state

# --- –ì–æ–ª–æ–≤–Ω–∏–π GUI ---
def launch_gui():
    window = tk.Tk()
    window.title("–î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π –±–æ—Ç: –•—Ä–æ–Ω—ñ—á–Ω–∞ –∫—Ä–æ–ø–∏–≤‚Äô—è–Ω–∫–∞ / –ê–ù–ù")
    window.configure(bg=BG_COLOR)

    style = ttk.Style()
    style.configure("TButton", font=FONT, padding=6)
    style.configure("TEntry", font=FONT)

    chat = scrolledtext.ScrolledText(window, wrap=tk.WORD, width=70, height=30, font=FONT, bg=BG_COLOR)
    chat.pack(padx=15, pady=10)
    chat.insert(tk.END, "ü§ñ –ë–æ—Ç: üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –•–ö/–ê–ù–ù\n–ß–∏ –≤–∏–∫–ª—é—á–µ–Ω–æ –≤—Å—ñ –≤—ñ–¥–æ–º—ñ –ø—Ä–æ–≤–æ–∫—É—é—á—ñ —Ñ–∞–∫—Ç–æ—Ä–∏? (—Ç–∞–∫/–Ω—ñ)\n")
    chat.config(state='disabled')

    entry = tk.Entry(window, font=FONT, width=50)
    entry.pack(padx=10, pady=5)

    state = {"step": "start"}

    def send():
        user_input = entry.get().strip()
        if not user_input:
            return
        entry.delete(0, tk.END)

        chat.config(state='normal')
        chat.insert(tk.END, f"\nüë§ –í–∏: {user_input}\n", 'user')
        response, next_step = get_bot_response(user_input, state["step"])
        chat.insert(tk.END, f"ü§ñ –ë–æ—Ç: {response}\n", 'bot')
        chat.config(state='disabled')
        chat.see(tk.END)

        state["step"] = next_step

    entry.bind("<Return>", lambda e: send())
    send_button = ttk.Button(window, text="–ù–∞–¥—ñ—Å–ª–∞—Ç–∏", command=send)
    send_button.pack(pady=10)

    window.mainloop()

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    launch_gui()
